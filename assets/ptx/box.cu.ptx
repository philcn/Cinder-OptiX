//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21140586
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z13box_intersecti
.global .align 8 .b8 boxmin[12];
.global .align 8 .b8 boxmax[12];
.global .align 4 .b8 ray[36];
.global .align 8 .b8 texcoord[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo6boxminE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6boxmaxE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6boxminE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6boxmaxE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum6boxminE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6boxmaxE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic6boxminE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6boxmaxE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation6boxminE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6boxmaxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];

.visible .entry _Z13box_intersecti(
	.param .u32 _Z13box_intersecti_param_0
)
{
	.reg .pred 	%p<17>;
	.reg .f32 	%f<117>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<11>;


	mov.u64 	%rd1, boxmin;
	mov.u64 	%rd2, ray;
	ldu.global.f32 	%f3, [ray];
	ldu.global.v2.f32 	{%f4, %f5}, [boxmin];
	sub.f32 	%f7, %f4, %f3;
	add.s64 	%rd3, %rd2, 4;
	ldu.global.f32 	%f8, [%rd3];
	sub.f32 	%f10, %f5, %f8;
	add.s64 	%rd4, %rd2, 8;
	ldu.global.f32 	%f11, [%rd4];
	add.s64 	%rd5, %rd1, 8;
	ldu.global.f32 	%f12, [%rd5];
	sub.f32 	%f13, %f12, %f11;
	add.s64 	%rd6, %rd2, 12;
	ldu.global.f32 	%f14, [%rd6];
	div.rn.f32 	%f15, %f7, %f14;
	add.s64 	%rd7, %rd2, 16;
	ldu.global.f32 	%f16, [%rd7];
	div.rn.f32 	%f17, %f10, %f16;
	add.s64 	%rd8, %rd2, 20;
	ldu.global.f32 	%f18, [%rd8];
	div.rn.f32 	%f19, %f13, %f18;
	mov.u64 	%rd9, boxmax;
	ldu.global.v2.f32 	{%f20, %f21}, [boxmax];
	sub.f32 	%f23, %f20, %f3;
	sub.f32 	%f25, %f21, %f8;
	add.s64 	%rd10, %rd9, 8;
	ldu.global.f32 	%f26, [%rd10];
	sub.f32 	%f27, %f26, %f11;
	div.rn.f32 	%f28, %f23, %f14;
	div.rn.f32 	%f29, %f25, %f16;
	div.rn.f32 	%f30, %f27, %f18;
	min.f32 	%f31, %f15, %f28;
	min.f32 	%f32, %f17, %f29;
	min.f32 	%f33, %f19, %f30;
	max.f32 	%f34, %f15, %f28;
	max.f32 	%f35, %f17, %f29;
	max.f32 	%f36, %f19, %f30;
	max.f32 	%f37, %f31, %f32;
	max.f32 	%f1, %f37, %f33;
	min.f32 	%f38, %f34, %f35;
	min.f32 	%f2, %f38, %f36;
	setp.gtu.f32	%p1, %f1, %f2;
	@%p1 bra 	BB0_5;

	// inline asm
	call (%r1), _rt_potential_intersection, (%f1);
	// inline asm
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB0_3;

	mov.u32 	%r3, 0;
	st.global.u32 	[texcoord+8], %r3;
	mov.f32 	%f40, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f40, %f40};
	ld.global.f32 	%f41, [ray];
	ld.global.v2.f32 	{%f42, %f43}, [boxmin];
	sub.f32 	%f45, %f42, %f41;
	ld.global.f32 	%f46, [ray+4];
	sub.f32 	%f48, %f43, %f46;
	ld.global.f32 	%f49, [ray+8];
	ld.global.f32 	%f50, [boxmin+8];
	sub.f32 	%f51, %f50, %f49;
	ld.global.f32 	%f52, [ray+12];
	div.rn.f32 	%f53, %f45, %f52;
	ld.global.f32 	%f54, [ray+16];
	div.rn.f32 	%f55, %f48, %f54;
	ld.global.f32 	%f56, [ray+20];
	div.rn.f32 	%f57, %f51, %f56;
	ld.global.v2.f32 	{%f58, %f59}, [boxmax];
	sub.f32 	%f61, %f58, %f41;
	sub.f32 	%f63, %f59, %f46;
	ld.global.f32 	%f64, [boxmax+8];
	sub.f32 	%f65, %f64, %f49;
	div.rn.f32 	%f66, %f61, %f52;
	div.rn.f32 	%f67, %f63, %f54;
	div.rn.f32 	%f68, %f65, %f56;
	setp.eq.f32	%p3, %f53, %f1;
	selp.u32	%r4, 1, 0, %p3;
	cvt.rn.f32.s32	%f69, %r4;
	setp.eq.f32	%p4, %f55, %f1;
	selp.u32	%r5, 1, 0, %p4;
	cvt.rn.f32.s32	%f70, %r5;
	setp.eq.f32	%p5, %f57, %f1;
	selp.u32	%r6, 1, 0, %p5;
	cvt.rn.f32.s32	%f71, %r6;
	setp.eq.f32	%p6, %f66, %f1;
	selp.u32	%r7, 1, 0, %p6;
	cvt.rn.f32.s32	%f72, %r7;
	setp.eq.f32	%p7, %f67, %f1;
	selp.u32	%r8, 1, 0, %p7;
	cvt.rn.f32.s32	%f73, %r8;
	setp.eq.f32	%p8, %f68, %f1;
	selp.u32	%r9, 1, 0, %p8;
	cvt.rn.f32.s32	%f74, %r9;
	sub.f32 	%f75, %f74, %f71;
	sub.f32 	%f76, %f73, %f70;
	sub.f32 	%f77, %f72, %f69;
	st.global.v2.f32 	[geometric_normal], {%f77, %f76};
	st.global.f32 	[geometric_normal+8], %f75;
	st.global.v2.f32 	[shading_normal], {%f77, %f76};
	st.global.f32 	[shading_normal+8], %f75;
	// inline asm
	call (%r2), _rt_report_intersection, (%r3);
	// inline asm
	setp.ne.s32	%p9, %r2, 0;
	@%p9 bra 	BB0_5;

BB0_3:
	// inline asm
	call (%r10), _rt_potential_intersection, (%f2);
	// inline asm
	setp.eq.s32	%p10, %r10, 0;
	@%p10 bra 	BB0_5;

	mov.u32 	%r12, 0;
	st.global.u32 	[texcoord+8], %r12;
	mov.f32 	%f79, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f79, %f79};
	ld.global.f32 	%f80, [ray];
	ld.global.v2.f32 	{%f81, %f82}, [boxmin];
	sub.f32 	%f84, %f81, %f80;
	ld.global.f32 	%f85, [ray+4];
	sub.f32 	%f87, %f82, %f85;
	ld.global.f32 	%f88, [ray+8];
	ld.global.f32 	%f89, [boxmin+8];
	sub.f32 	%f90, %f89, %f88;
	ld.global.f32 	%f91, [ray+12];
	div.rn.f32 	%f92, %f84, %f91;
	ld.global.f32 	%f93, [ray+16];
	div.rn.f32 	%f94, %f87, %f93;
	ld.global.f32 	%f95, [ray+20];
	div.rn.f32 	%f96, %f90, %f95;
	ld.global.v2.f32 	{%f97, %f98}, [boxmax];
	sub.f32 	%f100, %f97, %f80;
	sub.f32 	%f102, %f98, %f85;
	ld.global.f32 	%f103, [boxmax+8];
	sub.f32 	%f104, %f103, %f88;
	div.rn.f32 	%f105, %f100, %f91;
	div.rn.f32 	%f106, %f102, %f93;
	div.rn.f32 	%f107, %f104, %f95;
	setp.eq.f32	%p11, %f92, %f2;
	selp.u32	%r13, 1, 0, %p11;
	cvt.rn.f32.s32	%f108, %r13;
	setp.eq.f32	%p12, %f94, %f2;
	selp.u32	%r14, 1, 0, %p12;
	cvt.rn.f32.s32	%f109, %r14;
	setp.eq.f32	%p13, %f96, %f2;
	selp.u32	%r15, 1, 0, %p13;
	cvt.rn.f32.s32	%f110, %r15;
	setp.eq.f32	%p14, %f105, %f2;
	selp.u32	%r16, 1, 0, %p14;
	cvt.rn.f32.s32	%f111, %r16;
	setp.eq.f32	%p15, %f106, %f2;
	selp.u32	%r17, 1, 0, %p15;
	cvt.rn.f32.s32	%f112, %r17;
	setp.eq.f32	%p16, %f107, %f2;
	selp.u32	%r18, 1, 0, %p16;
	cvt.rn.f32.s32	%f113, %r18;
	sub.f32 	%f114, %f113, %f110;
	sub.f32 	%f115, %f112, %f109;
	sub.f32 	%f116, %f111, %f108;
	st.global.v2.f32 	[geometric_normal], {%f116, %f115};
	st.global.f32 	[geometric_normal+8], %f114;
	st.global.v2.f32 	[shading_normal], {%f116, %f115};
	st.global.f32 	[shading_normal+8], %f114;
	// inline asm
	call (%r11), _rt_report_intersection, (%r12);
	// inline asm

BB0_5:
	ret;
}

	// .globl	_Z10box_boundsiPf
.visible .entry _Z10box_boundsiPf(
	.param .u32 _Z10box_boundsiPf_param_0,
	.param .u64 _Z10box_boundsiPf_param_1
)
{
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z10box_boundsiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	ld.global.v2.f32 	{%f1, %f2}, [boxmin];
	ld.global.f32 	%f5, [boxmin+8];
	st.global.f32 	[%rd2+8], %f5;
	st.global.f32 	[%rd2+4], %f2;
	st.global.f32 	[%rd2], %f1;
	ld.global.v2.f32 	{%f6, %f7}, [boxmax];
	ld.global.f32 	%f10, [boxmax+8];
	st.global.f32 	[%rd2+20], %f10;
	st.global.f32 	[%rd2+16], %f7;
	st.global.f32 	[%rd2+12], %f6;
	ret;
}


