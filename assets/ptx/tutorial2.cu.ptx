//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21140586
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	_Z14pinhole_camerav
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 8 .b8 prd_radiance[20];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 launch_index[8];
.global .align 4 .u32 radiance_ray_type;
.global .align 4 .f32 scene_epsilon;
.global .align 8 .b8 top_object[4];
.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 1 .b8 output_buffer[1];
.global .align 8 .b8 bg_color[12];
.global .align 4 .b8 Ka[12];
.global .align 4 .b8 Ks[12];
.global .align 4 .f32 phong_exp;
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 ambient_light_color[12];
.global .align 1 .b8 lights[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KaE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9phong_expE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KaE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9phong_expE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9phong_expE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9phong_expE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9phong_expE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 8 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<16>;


	mov.u64 	%rd15, __local_depot0;
	cvta.local.u64 	%SP, %rd15;
	mov.u64 	%rd13, output_buffer;
	cvta.global.u64 	%rd5, %rd13;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 4;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r8, %r9}, [launch_index];
	cvt.rn.f32.u32	%f9, %r8;
	cvt.rn.f32.u32	%f10, %r9;
	cvt.rn.f32.u64	%f11, %rd1;
	cvt.rn.f32.u64	%f12, %rd2;
	div.rn.f32 	%f13, %f9, %f11;
	div.rn.f32 	%f14, %f10, %f12;
	fma.rn.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f19, [U];
	ld.global.f32 	%f20, [U+4];
	ld.global.f32 	%f21, [U+8];
	ld.global.f32 	%f22, [V];
	mul.f32 	%f23, %f16, %f22;
	ld.global.f32 	%f24, [V+4];
	mul.f32 	%f25, %f16, %f24;
	ld.global.f32 	%f26, [V+8];
	mul.f32 	%f27, %f16, %f26;
	fma.rn.f32 	%f28, %f15, %f19, %f23;
	fma.rn.f32 	%f29, %f15, %f20, %f25;
	fma.rn.f32 	%f30, %f15, %f21, %f27;
	ld.global.f32 	%f31, [W];
	add.f32 	%f32, %f28, %f31;
	ld.global.f32 	%f33, [W+4];
	add.f32 	%f34, %f29, %f33;
	ld.global.f32 	%f35, [W+8];
	add.f32 	%f36, %f30, %f35;
	mul.f32 	%f37, %f34, %f34;
	fma.rn.f32 	%f38, %f32, %f32, %f37;
	fma.rn.f32 	%f39, %f36, %f36, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f4, %f32, %f41;
	mul.f32 	%f5, %f34, %f41;
	mul.f32 	%f6, %f36, %f41;
	ld.global.u32 	%r4, [radiance_ray_type];
	ld.global.f32 	%f7, [scene_epsilon];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd14, %rd6;
	mov.u32 	%r12, 1065353216;
	st.local.u32 	[%rd14+12], %r12;
	mov.u32 	%r13, 0;
	st.local.u32 	[%rd14+16], %r13;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r5, 20;
	// inline asm
	call _rt_trace_64, (%r3, %f17, %f18, %f3, %f4, %f5, %f6, %r4, %f7, %f8, %rd6, %r5);
	// inline asm
	ld.global.v2.u32 	{%r14, %r15}, [launch_index];
	cvt.u64.u32	%rd9, %r14;
	cvt.u64.u32	%rd10, %r15;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f42, [%rd14+8];
	cvt.sat.f32.f32	%f43, %f42;
	mul.f32 	%f44, %f43, 0f437FFD71;
	cvt.rzi.u32.f32	%r18, %f44;
	ld.local.f32 	%f45, [%rd14+4];
	cvt.sat.f32.f32	%f46, %f45;
	mul.f32 	%f47, %f46, 0f437FFD71;
	cvt.rzi.u32.f32	%r19, %f47;
	ld.local.f32 	%f48, [%rd14];
	cvt.sat.f32.f32	%f49, %f48;
	mul.f32 	%f50, %f49, 0f437FFD71;
	cvt.rzi.u32.f32	%r20, %f50;
	cvt.u16.u32	%rs1, %r20;
	cvt.u16.u32	%rs2, %r19;
	cvt.u16.u32	%rs3, %r18;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd7], {%rs3, %rs2, %rs1, %rs4};
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<6>;


	ld.global.f32 	%f1, [bg_color+8];
	ld.global.v2.f32 	{%f2, %f3}, [bg_color];
	st.global.v2.f32 	[prd_radiance], {%f2, %f3};
	st.global.f32 	[prd_radiance+8], %f1;
	ret;
}

	// .globl	_Z21closest_hit_radiance2v
.visible .entry _Z21closest_hit_radiance2v(

)
{
	.reg .pred 	%p<33>;
	.reg .f32 	%f<237>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<29>;


	ldu.global.f32 	%f62, [geometric_normal];
	mov.u64 	%rd9, geometric_normal;
	add.s64 	%rd10, %rd9, 4;
	ldu.global.f32 	%f63, [%rd10];
	add.s64 	%rd11, %rd9, 8;
	ldu.global.f32 	%f64, [%rd11];
	mov.u32 	%r6, 7937;
	mov.f32 	%f73, 0f00000000;
	// inline asm
	call (%f58, %f59, %f60, %f61), _rt_transform_tuple, (%r6, %f62, %f63, %f64, %f73);
	// inline asm
	mul.f32 	%f74, %f59, %f59;
	fma.rn.f32 	%f75, %f58, %f58, %f74;
	fma.rn.f32 	%f76, %f60, %f60, %f75;
	sqrt.rn.f32 	%f77, %f76;
	rcp.rn.f32 	%f78, %f77;
	mul.f32 	%f79, %f58, %f78;
	mul.f32 	%f80, %f59, %f78;
	mul.f32 	%f81, %f60, %f78;
	ld.global.f32 	%f70, [shading_normal];
	ld.global.f32 	%f71, [shading_normal+4];
	ld.global.f32 	%f72, [shading_normal+8];
	// inline asm
	call (%f66, %f67, %f68, %f69), _rt_transform_tuple, (%r6, %f70, %f71, %f72, %f73);
	// inline asm
	mul.f32 	%f82, %f67, %f67;
	fma.rn.f32 	%f83, %f66, %f66, %f82;
	fma.rn.f32 	%f84, %f68, %f68, %f83;
	sqrt.rn.f32 	%f85, %f84;
	rcp.rn.f32 	%f86, %f85;
	mul.f32 	%f87, %f66, %f86;
	mul.f32 	%f88, %f67, %f86;
	mul.f32 	%f89, %f68, %f86;
	ld.global.f32 	%f90, [ray+12];
	mul.f32 	%f91, %f79, %f90;
	ld.global.f32 	%f92, [ray+16];
	mul.f32 	%f93, %f80, %f92;
	neg.f32 	%f94, %f93;
	sub.f32 	%f95, %f94, %f91;
	ld.global.f32 	%f96, [ray+20];
	mul.f32 	%f97, %f81, %f96;
	sub.f32 	%f98, %f95, %f97;
	mov.b32 	 %r10, %f98;
	and.b32  	%r11, %r10, -2147483648;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	 %f99, %r12;
	mul.f32 	%f1, %f87, %f99;
	mul.f32 	%f2, %f88, %f99;
	mul.f32 	%f3, %f89, %f99;
	ld.global.f32 	%f100, [ambient_light_color];
	ld.global.f32 	%f101, [Ka];
	mul.f32 	%f236, %f101, %f100;
	ld.global.f32 	%f102, [ambient_light_color+4];
	ld.global.f32 	%f103, [Ka+4];
	mul.f32 	%f235, %f103, %f102;
	ld.global.f32 	%f104, [ambient_light_color+8];
	ld.global.f32 	%f105, [Ka+8];
	mul.f32 	%f234, %f105, %f104;
	ld.global.f32 	%f106, [t_hit];
	ld.global.f32 	%f107, [ray];
	fma.rn.f32 	%f7, %f106, %f90, %f107;
	ld.global.f32 	%f108, [ray+4];
	fma.rn.f32 	%f8, %f106, %f92, %f108;
	ld.global.f32 	%f109, [ray+8];
	fma.rn.f32 	%f9, %f106, %f96, %f109;
	mov.u64 	%rd12, lights;
	cvta.global.u64 	%rd7, %rd12;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r13, %rd3;
	setp.eq.s32	%p2, %r13, 0;
	mov.u32 	%r37, 0;
	mov.u64 	%rd28, 0;
	@%p2 bra 	BB2_18;

BB2_1:
	mov.u64 	%rd1, %rd28;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd7, %r7, %r8, %rd1, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f18, [%rd13+20];
	ld.f32 	%f17, [%rd13+16];
	ld.f32 	%f16, [%rd13+12];
	ld.f32 	%f15, [%rd13+8];
	ld.f32 	%f14, [%rd13+4];
	ld.f32 	%f13, [%rd13];
	sub.f32 	%f110, %f13, %f7;
	sub.f32 	%f111, %f14, %f8;
	sub.f32 	%f112, %f15, %f9;
	mul.f32 	%f113, %f111, %f111;
	fma.rn.f32 	%f114, %f110, %f110, %f113;
	fma.rn.f32 	%f115, %f112, %f112, %f114;
	sqrt.rn.f32 	%f116, %f115;
	rcp.rn.f32 	%f117, %f116;
	mul.f32 	%f19, %f110, %f117;
	mul.f32 	%f20, %f111, %f117;
	mul.f32 	%f21, %f112, %f117;
	mul.f32 	%f118, %f2, %f20;
	fma.rn.f32 	%f119, %f1, %f19, %f118;
	fma.rn.f32 	%f22, %f3, %f21, %f119;
	setp.leu.f32	%p3, %f22, 0f00000000;
	@%p3 bra 	BB2_17;

	ld.global.f32 	%f120, [Kd];
	mul.f32 	%f121, %f22, %f120;
	ld.global.f32 	%f122, [Kd+4];
	mul.f32 	%f123, %f22, %f122;
	ld.global.f32 	%f124, [Kd+8];
	mul.f32 	%f125, %f22, %f124;
	fma.rn.f32 	%f236, %f16, %f121, %f236;
	fma.rn.f32 	%f235, %f17, %f123, %f235;
	fma.rn.f32 	%f234, %f18, %f125, %f234;
	ld.global.f32 	%f126, [ray+12];
	sub.f32 	%f127, %f19, %f126;
	ld.global.f32 	%f128, [ray+16];
	sub.f32 	%f129, %f20, %f128;
	ld.global.f32 	%f130, [ray+20];
	sub.f32 	%f131, %f21, %f130;
	mul.f32 	%f132, %f129, %f129;
	fma.rn.f32 	%f133, %f127, %f127, %f132;
	fma.rn.f32 	%f134, %f131, %f131, %f133;
	sqrt.rn.f32 	%f135, %f134;
	rcp.rn.f32 	%f136, %f135;
	mul.f32 	%f137, %f127, %f136;
	mul.f32 	%f138, %f129, %f136;
	mul.f32 	%f139, %f131, %f136;
	mul.f32 	%f140, %f2, %f138;
	fma.rn.f32 	%f141, %f1, %f137, %f140;
	fma.rn.f32 	%f29, %f3, %f139, %f141;
	setp.leu.f32	%p4, %f29, 0f00000000;
	@%p4 bra 	BB2_17;

	mov.f32 	%f228, 0f00000000;
	ld.global.f32 	%f146, [Ks];
	mul.f32 	%f30, %f16, %f146;
	ld.global.f32 	%f147, [Ks+4];
	mul.f32 	%f31, %f17, %f147;
	ld.global.f32 	%f148, [Ks+8];
	mul.f32 	%f32, %f18, %f148;
	ld.global.f32 	%f33, [phong_exp];
	mul.f32 	%f149, %f33, 0f3F000000;
	cvt.rzi.f32.f32	%f150, %f149;
	fma.rn.f32 	%f151, %f150, 0fC0000000, %f33;
	abs.f32 	%f34, %f151;
	abs.f32 	%f35, %f29;
	setp.lt.f32	%p5, %f35, 0f00800000;
	mul.f32 	%f152, %f35, 0f4B800000;
	selp.f32	%f153, 0fC3170000, 0fC2FE0000, %p5;
	selp.f32	%f154, %f152, %f35, %p5;
	mov.b32 	 %r16, %f154;
	and.b32  	%r17, %r16, 8388607;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f155, %r18;
	shr.u32 	%r19, %r16, 23;
	cvt.rn.f32.u32	%f156, %r19;
	add.f32 	%f157, %f153, %f156;
	setp.gt.f32	%p6, %f155, 0f3FB504F3;
	mul.f32 	%f158, %f155, 0f3F000000;
	add.f32 	%f159, %f157, 0f3F800000;
	selp.f32	%f160, %f158, %f155, %p6;
	selp.f32	%f161, %f159, %f157, %p6;
	add.f32 	%f162, %f160, 0fBF800000;
	add.f32 	%f143, %f160, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f142,%f143;
	// inline asm
	add.f32 	%f163, %f162, %f162;
	mul.f32 	%f164, %f142, %f163;
	mul.f32 	%f165, %f164, %f164;
	mov.f32 	%f166, 0f3C4CAF63;
	mov.f32 	%f167, 0f3B18F0FE;
	fma.rn.f32 	%f168, %f167, %f165, %f166;
	mov.f32 	%f169, 0f3DAAAABD;
	fma.rn.f32 	%f170, %f168, %f165, %f169;
	mul.rn.f32 	%f171, %f170, %f165;
	mul.rn.f32 	%f172, %f171, %f164;
	sub.f32 	%f173, %f162, %f164;
	neg.f32 	%f174, %f164;
	add.f32 	%f175, %f173, %f173;
	fma.rn.f32 	%f176, %f174, %f162, %f175;
	mul.rn.f32 	%f177, %f142, %f176;
	add.f32 	%f178, %f172, %f164;
	sub.f32 	%f179, %f164, %f178;
	add.f32 	%f180, %f172, %f179;
	add.f32 	%f181, %f177, %f180;
	add.f32 	%f182, %f178, %f181;
	sub.f32 	%f183, %f178, %f182;
	add.f32 	%f184, %f181, %f183;
	mov.f32 	%f185, 0f3F317200;
	mul.rn.f32 	%f186, %f161, %f185;
	mov.f32 	%f187, 0f35BFBE8E;
	mul.rn.f32 	%f188, %f161, %f187;
	add.f32 	%f189, %f186, %f182;
	sub.f32 	%f190, %f186, %f189;
	add.f32 	%f191, %f182, %f190;
	add.f32 	%f192, %f184, %f191;
	add.f32 	%f193, %f188, %f192;
	add.f32 	%f194, %f189, %f193;
	sub.f32 	%f195, %f189, %f194;
	add.f32 	%f196, %f193, %f195;
	abs.f32 	%f36, %f33;
	setp.gt.f32	%p7, %f36, 0f77F684DF;
	mul.f32 	%f197, %f33, 0f39000000;
	selp.f32	%f198, %f197, %f33, %p7;
	mul.rn.f32 	%f199, %f198, %f194;
	neg.f32 	%f200, %f199;
	fma.rn.f32 	%f201, %f198, %f194, %f200;
	fma.rn.f32 	%f202, %f198, %f196, %f201;
	fma.rn.f32 	%f204, %f228, %f194, %f202;
	add.rn.f32 	%f205, %f199, %f204;
	neg.f32 	%f206, %f205;
	add.rn.f32 	%f207, %f199, %f206;
	add.rn.f32 	%f208, %f207, %f204;
	mov.b32 	 %r20, %f205;
	setp.eq.s32	%p8, %r20, 1118925336;
	add.s32 	%r21, %r20, -1;
	mov.b32 	 %f209, %r21;
	add.f32 	%f210, %f208, 0f37000000;
	selp.f32	%f211, %f209, %f205, %p8;
	selp.f32	%f37, %f210, %f208, %p8;
	mul.f32 	%f212, %f211, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f213, %f212;
	mov.f32 	%f214, 0fBF317200;
	fma.rn.f32 	%f215, %f213, %f214, %f211;
	mov.f32 	%f216, 0fB5BFBE8E;
	fma.rn.f32 	%f217, %f213, %f216, %f215;
	mul.f32 	%f145, %f217, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f144,%f145;
	// inline asm
	add.f32 	%f218, %f213, 0f00000000;
	ex2.approx.f32 	%f219, %f218;
	mul.f32 	%f220, %f144, %f219;
	setp.lt.f32	%p9, %f211, 0fC2D20000;
	selp.f32	%f221, 0f00000000, %f220, %p9;
	setp.gt.f32	%p10, %f211, 0f42D20000;
	selp.f32	%f232, 0f7F800000, %f221, %p10;
	setp.eq.f32	%p11, %f232, 0f7F800000;
	@%p11 bra 	BB2_5;

	fma.rn.f32 	%f232, %f232, %f37, %f232;

BB2_5:
	setp.lt.f32	%p12, %f29, 0f00000000;
	setp.eq.f32	%p13, %f34, 0f3F800000;
	and.pred  	%p1, %p12, %p13;
	mov.b32 	 %r22, %f232;
	xor.b32  	%r23, %r22, -2147483648;
	mov.b32 	 %f222, %r23;
	selp.f32	%f233, %f222, %f232, %p1;
	setp.eq.f32	%p14, %f29, 0f00000000;
	@%p14 bra 	BB2_8;
	bra.uni 	BB2_6;

BB2_8:
	add.f32 	%f224, %f29, %f29;
	mov.b32 	 %r24, %f224;
	selp.b32	%r25, %r24, 0, %p13;
	or.b32  	%r26, %r25, 2139095040;
	setp.lt.f32	%p18, %f33, 0f00000000;
	selp.b32	%r27, %r26, %r25, %p18;
	mov.b32 	 %f233, %r27;
	bra.uni 	BB2_9;

BB2_6:
	setp.geu.f32	%p15, %f29, 0f00000000;
	@%p15 bra 	BB2_9;

	cvt.rzi.f32.f32	%f223, %f33;
	setp.neu.f32	%p16, %f223, %f33;
	selp.f32	%f233, 0f7FFFFFFF, %f233, %p16;

BB2_9:
	abs.f32 	%f229, %f33;
	add.f32 	%f225, %f35, %f229;
	mov.b32 	 %r28, %f225;
	setp.lt.s32	%p19, %r28, 2139095040;
	@%p19 bra 	BB2_16;

	abs.f32 	%f230, %f33;
	setp.gtu.f32	%p20, %f35, 0f7F800000;
	setp.gtu.f32	%p21, %f230, 0f7F800000;
	or.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB2_15;
	bra.uni 	BB2_11;

BB2_15:
	add.f32 	%f233, %f29, %f33;
	bra.uni 	BB2_16;

BB2_11:
	abs.f32 	%f231, %f33;
	setp.eq.f32	%p23, %f231, 0f7F800000;
	@%p23 bra 	BB2_14;
	bra.uni 	BB2_12;

BB2_14:
	setp.gt.f32	%p26, %f35, 0f3F800000;
	selp.b32	%r32, 2139095040, 0, %p26;
	xor.b32  	%r33, %r32, 2139095040;
	setp.lt.f32	%p27, %f33, 0f00000000;
	selp.b32	%r34, %r33, %r32, %p27;
	mov.b32 	 %f226, %r34;
	setp.eq.f32	%p28, %f29, 0fBF800000;
	selp.f32	%f233, 0f3F800000, %f226, %p28;
	bra.uni 	BB2_16;

BB2_12:
	setp.neu.f32	%p24, %f35, 0f7F800000;
	@%p24 bra 	BB2_16;

	setp.ge.f32	%p25, %f33, 0f00000000;
	selp.b32	%r29, 2139095040, 0, %p25;
	or.b32  	%r30, %r29, -2147483648;
	selp.b32	%r31, %r30, %r29, %p1;
	mov.b32 	 %f233, %r31;

BB2_16:
	setp.eq.f32	%p29, %f33, 0f00000000;
	setp.eq.f32	%p30, %f29, 0f3F800000;
	or.pred  	%p31, %p30, %p29;
	selp.f32	%f227, 0f3F800000, %f233, %p31;
	fma.rn.f32 	%f236, %f30, %f227, %f236;
	fma.rn.f32 	%f235, %f31, %f227, %f235;
	fma.rn.f32 	%f234, %f32, %f227, %f234;

BB2_17:
	add.s32 	%r37, %r37, 1;
	cvt.s64.s32	%rd28, %r37;
	// inline asm
	call (%rd20, %rd21, %rd22, %rd23), _rt_buffer_get_size_64, (%rd7, %r7, %r8);
	// inline asm
	and.b64  	%rd26, %rd20, 4294967295;
	setp.lt.u64	%p32, %rd28, %rd26;
	@%p32 bra 	BB2_1;

BB2_18:
	st.global.v2.f32 	[prd_radiance], {%f236, %f235};
	st.global.f32 	[prd_radiance+8], %f234;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [launch_index];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, output_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 4;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	ld.global.f32 	%f1, [bad_color+8];
	cvt.sat.f32.f32	%f2, %f1;
	mul.f32 	%f3, %f2, 0f437FFD71;
	cvt.rzi.u32.f32	%r7, %f3;
	ld.global.f32 	%f4, [bad_color+4];
	cvt.sat.f32.f32	%f5, %f4;
	mul.f32 	%f6, %f5, 0f437FFD71;
	cvt.rzi.u32.f32	%r8, %f6;
	ld.global.f32 	%f7, [bad_color];
	cvt.sat.f32.f32	%f8, %f7;
	mul.f32 	%f9, %f8, 0f437FFD71;
	cvt.rzi.u32.f32	%r9, %f9;
	cvt.u16.u32	%rs1, %r9;
	cvt.u16.u32	%rs2, %r8;
	cvt.u16.u32	%rs3, %r7;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd1], {%rs3, %rs2, %rs1, %rs4};
	ret;
}


